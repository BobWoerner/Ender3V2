#####################################################################
#     PRINT START
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Hold bed temp for one minute
    G4 P60000
    # KAMP Bed mesh
    BED_MESH_CALIBRATE
    # Load Mesh
    BED_MESH_PROFILE LOAD=default
    # Park behind nozzle brush and wait for extruder temp
    G1 X200 Y-10 Z5
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Clean nozzle
    # CLEAN_NOZZLE
    # Purge nozzle
    LINE_PURGE
    #Small extrude for start of print after purge
    G1 E0.2 F3600
    # Zero Extruder
    G92 E0
    
    
#####################################################################
#     PRINT END
#####################################################################

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 15) %}
        {% set x_safe = 10.0 %}
    {% else %}
        {% set x_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 15) %}
        {% set y_safe = 10.0 %}
    {% else %}
        {% set y_safe = -10.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} + Z10 F3600         ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y - 5} F3600   ; park nozzle at rear
    M84
    M117 Finished!

#####################################################################
#     CHANGE FILAMENT
#####################################################################

[gcode_macro M600]
gcode: PAUSE 

#####################################################################
# FILAMENT RUNOUT
#####################################################################

;[gcode_macro F_CONSUMED]
;variable_toolhead_position: 0
;variable_filament_consumed: 0
;variable_filament_lenght: 200   # length between the sensor and extruder

;gcode:
  ;# save current filament consumption
  ;SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=filament_consumed VALUE={printer.print_stats.filament_used}
  ;# save current toolhead position
  ;SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=toolhead_position VALUE={printer.toolhead.position.z}
  ;# start checking filament consumption
  ;UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1

;[delayed_gcode DELAY_M600]
;gcode:
  ;# use set for easier reading
  ;{% set consumed=printer["gcode_macro F_CONSUMED"].filament_consumed %}
  ;{% set length=printer["gcode_macro F_CONSUMED"].filament_lenght %}
  ;{% set position=printer["gcode_macro F_CONSUMED"].toolhead_position %}
  ;# check if predetermine length is reached
  ;{% if printer.print_stats.filament_used|float <= (consumed|float + length|float - position|float) %}
    ;# start looping this script every second
    ;UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1
  ;{% else %}
    ;M600
  ;{% endif %}
